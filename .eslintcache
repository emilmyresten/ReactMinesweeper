[{"/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/index.js":"1","/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/App.js":"2","/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/cell.js":"3","/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/mineField.js":"4","/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/views/CellView.js":"5","/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/Cell.js":"6","/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/MineField.js":"7","/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/views/MineFieldView.js":"8","/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/NavBar.js":"9","/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/views/NavBarView.js":"10"},{"size":158,"mtime":1608380648394,"results":"11","hashOfConfig":"12"},{"size":168,"mtime":1608415193402,"results":"13","hashOfConfig":"12"},{"size":513,"mtime":1608328952040,"results":"14","hashOfConfig":"12"},{"size":456,"mtime":1608328952040,"results":"15","hashOfConfig":"12"},{"size":2818,"mtime":1608466056114,"results":"16","hashOfConfig":"12"},{"size":3479,"mtime":1608466111404,"results":"17","hashOfConfig":"12"},{"size":1160,"mtime":1608459244676,"results":"18","hashOfConfig":"12"},{"size":992,"mtime":1608457883051,"results":"19","hashOfConfig":"12"},{"size":983,"mtime":1608467383877,"results":"20","hashOfConfig":"12"},{"size":2286,"mtime":1608468986685,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ka077v",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/index.js",[],["44","45"],"/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/App.js",[],"/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/cell.js",["46"],"/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/mineField.js",[],"/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/views/CellView.js",["47","48"],"import flagImg from '../assets/flag.png';\nimport mineImg from '../assets/mine.png';\nimport React from 'react';\n\nconst CellView = ({props: {mine, setMine, flag, setFlag, visible, setVisible, adjacent, setAdjacent, MineField, selfIndex, recursivelyOpen, lost, visitedCells, winState, openAdjacentOnFlag}}) => {\n    const [hoverState, setHoverState] = React.useState(false)\n    \n    return (\n        <div className=\"cellContainer\"\n        onContextMenu={(!lost[0] && !winState[0]) ? (e) => {setFlag(!flag);e.preventDefault();return false;} : (e) => {e.preventDefault();return false;} }\n        onClick={(!lost[0] && !winState[0]) ?\n            () => flag ? undefined \n            : mine ? handleLoss(lost, setVisible, MineField) \n            : handleClick(MineField, selfIndex,recursivelyOpen, visitedCells, winState) \n            : undefined}\n        onMouseEnter={(e) => e.target.focus()}\n        onKeyDown={(e) => e.key===\" \" ? handleSpaceBar(flag, setFlag, visible, openAdjacentOnFlag, MineField, selfIndex, visitedCells, adjacent) : undefined}\n        >\n            <div className={visible ? mine ? \"mineCellSquare\" : \"visibleCellSquare\" : flag ? \"flaggedCellSquare\" : \"unTouchedCellSquare\"}\n            tabIndex=\"0\" \n            >\n                {visible ? mine ? <img src={mineImg} alt=\"m\"/> : adjacent === 0 ? \" \" : adjacent : flag ? <img src={flagImg} alt=\"f\"/> : \"\"}\n            </div>\n        </div>\n    )\n\n}\n\n\nexport default CellView;\n\n\n\nfunction handleClick(MineField, selfIndex, recursivelyOpen, visitedCells, winState) {\n    const [visited, mines] = visitedCells\n    const possible = (MineField.length * MineField[0].length) - mines\n    recursivelyOpen(MineField, selfIndex, visited)\n    if (visited.flatMap(e=>e).filter(x=>x===1).length === possible) { \n        // if the number of visible cells are the same as \n        // the number of non-mine cells we have won.\n        winState[1](true);\n        for (let i=0; i < MineField.length; i++) {\n            for (let j=0; j < MineField[0].length; j++) {\n                if (!MineField[i][j][2]) {\n                    if (!MineField[i][j][1]) {\n                        MineField[i][j][6](true)\n                    }\n                }\n            }\n        }\n    }   \n}\n\nfunction handleLoss(lost, setVisible, MineField) {\n    setVisible(true);\n    lost[1](true);\n    for (let i=0; i < MineField.length; i++) {\n        for (let j=0; j < MineField[0].length; j++) {\n            if (MineField[i][j][0]) {\n                if (!MineField[i][j][1]) {\n                    MineField[i][j][4](true)\n                }\n            }\n        }\n    }\n\n}\n\n\nfunction handleSpaceBar(flag, setFlag, visible, openAdjacentOnFlag, MineField, selfIndex, visitedCells, adjacent) {\n    visible ? openAdjacentOnFlag(MineField, selfIndex, visitedCells, adjacent) : setFlag(!flag);\n\n}","/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/Cell.js",[],"/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/MineField.js",[],"/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/views/MineFieldView.js",[],"/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/NavBar.js",[],"/Users/emilmyresten/Documents/Programming/webDev/minesweeper/src/views/NavBarView.js",["49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":12,"column":13,"nodeType":"56","messageId":"57","endLine":12,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":6,"column":12,"nodeType":"60","messageId":"61","endLine":6,"endColumn":22},{"ruleId":"58","severity":1,"message":"62","line":6,"column":24,"nodeType":"60","messageId":"61","endLine":6,"endColumn":37},{"ruleId":"58","severity":1,"message":"63","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":22},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-unused-vars","'hoverState' is assigned a value but never used.","Identifier","unusedVar","'setHoverState' is assigned a value but never used.","'openmouthemoji' is defined but never used.","no-global-assign","no-unsafe-negation"]